------------- Trabalhando com Formul√°rios em HTML -------------

 HTML I: Conceitos B√°sicos
 
 Percurso:
 - Tag <form>
 - Tag <input>
 - Tag <checkbox> e <radio>
 - Tag <buttom>
 - Tag <select>
 - Tag <textarea>
 
 Rever algumas Tags HTML. Entender como funcionam os formul√°rios de uma website e como uma 
informa√ß√£o enviada trav√©s de formularios chega ate o servidor.


------------- Tags Form -------------

üìù Tag <form> ‚Äî Formul√°rio em HTML
	- A tag <form> √© usada para criar formul√°rios ‚Äî ou seja, √°reas onde o usu√°rio pode preencher informa√ß√µes (como nome, e-mail, senha, etc.) e enviar para o site ou sistema.

‚úÖ Para que serve?
	- Reunir campos de entrada: texto, senha, n√∫mero, checkbox, bot√£o etc.
	- Enviar dados para o servidor (ou outro lugar).
 
 
üîë Explicando os principais elementos:
 Parte				O que faz
<form>			In√≠cio e fim do formul√°rio
action=""		Para onde os dados ser√£o enviados (p√°gina ou servidor)
method=""		Como os dados ser√£o enviados (get ou post)
<input>			Campo de entrada (texto, email, n√∫mero, etc.)
<label>			R√≥tulo que aparece ao lado do campo
<submit>		Bot√£o para enviar o formul√°rio

‚úÖ Resumo:
	- <form> = "pacote" de campos para preencher e enviar.
	- Dentro dele v√£o os <input>, <textarea>, <select>, etc. 
	

üìù Quando um formul√°rio tem entrada de dados, ele trabalha junto com:
1. üñ•Ô∏è Servidor
	- Recebe os dados enviados pelo formul√°rio.
	- Processa esses dados (ex: validar, salvar, responder etc.).
	- √â feito com linguagens como PHP, C# (ASP.NET), Node.js, Python, etc.

2.üóÑÔ∏è Banco de Dados
	- Armazena os dados recebidos (ex: nome, e-mail, senha).
	- Exemplo: MySQL, PostgreSQL, Oracle, SQL Server.

‚úÖ Exemplo real:
Um formul√°rio de cadastro:
	- O usu√°rio preenche: nome, e-mail, senha.
	- Clica em Enviar.
	- Os dados v√£o para o servidor.
	- O servidor salva os dados no banco de dados.
	- O usu√°rio recebe uma mensagem: "Cadastro realizado com sucesso!"	
	
üìå Ainda √© comum ver formul√°rios HTML com action="" (vazio).
	- Mas isso n√£o significa que est√° errado. Veja por qu√™:

O que significa action=""?
	- Um formul√°rio com action="" envia os dados para a pr√≥pria p√°gina atual.
	- Pode ser usado quando o servidor trata o envio no mesmo arquivo da p√°gina, ou quando JavaScript vai capturar e processar os dados.
	
	
‚úÖ Principais type da tag <input>:

Type:			O que faz:
text			Campo de texto comum
password		Campo para senha (oculta os caracteres)
email			Campo para e-mail (valida√ß√£o autom√°tica)
number			Campo para n√∫mero (com setinhas ‚Üë‚Üì)
tel				Campo para telefone (teclado num√©rico no celular)
url				Campo para links/endere√ßos de site
search			Campo de busca (estilo Google)
date			Seleciona uma data (calend√°rio)
time			Seleciona um hor√°rio
datetime-local	Data e hora (sem fuso hor√°rio)
color			Seletor de cor (mostra uma paleta)
file			Seleciona um arquivo para envio
checkbox		Caixa de sele√ß√£o (v√°rios itens)
radio			Bot√£o de sele√ß√£o √∫nica (escolher uma op√ß√£o)
range			Controle deslizante (barra de valor)
hidden			Campo invis√≠vel (usado para enviar dados escondidos)
submit			Bot√£o para enviar o formul√°rio
reset			Bot√£o para limpar todos os campos
button			Bot√£o normal (usado com JS ou personalizado)	


‚úÖ O que √© name="name" na tag <input>?
No HTML, o atributo name serve para identificar o dado que ser√° enviado quando o formul√°rio for processado.

üß† Em resumo: Nome: <input type="text" name="name" /><br />
	- A palavra "Nome:" √© s√≥ um texto comum, como se fosse uma legenda manual.
	- O que o usu√°rio digita na caixinha, vai ser enviado com o nome definido no atributo name.
	- type="text" ‚Üí tipo do campo (texto).
	- name="name" ‚Üí identificador do campo (usado no envio dos dados).
	- O valor digitado vai com o nome que est√° no atributo name.

=========== EXEMPLO ===========

<html>
  <head>
    <title>Formulario de Cadastro</title>
  </head>
  <body>

    <form name="signup" action="http://meusitecom.br/signup" method="GET">
      Nome: <input type="text" name="name" /><br />
      Idade: <input type="number" name="age" /><br />
      Senha: <input type="password" name="password" /><br />
      Email: <input type="email" name="email" /> <br />
      Telefone: <input type="number" name="Telefone" />

      <button type="submit">Enviar</button>
    </form>
  </body>
</html>

==============================

‚úÖSe voc√™ n√£o colocar o method, o HTML assume automaticamente o m√©todo GET.

‚úÖ Explicando seu formul√°rio: <form name="signup" action="http://meusitecom.br/signup">
	- name="signup" ‚Üí apenas um nome identificador interno para o formul√°rio (opcional).
	- action="http://meusitecom.br/signup" ‚Üí √© o endere√ßo do servidor para onde os dados v√£o ser enviados.
	- Como n√£o foi especificado o method, o padr√£o √© GET, ou seja:	os dados ser√£o enviados pela URL (como par√¢metros).
	
üìå Estrutura dessa URL:
1. http://meusitecom.br/signup
	‚Üí √â o endere√ßo do servidor e o caminho (rota) para onde os dados v√£o.

2. ?name=Alessandra+Lucas&age=21...
	‚Üí √â a query string: os dados que o formul√°rio est√° enviando.

Quando voc√™ clicar em enviar ele envia os dados para o servidor:
	http://meusitecom.br/signup?name=Alessandra+Lucas&age=37&password=123456&email=alessandra%40hotmail.com&Telefone=11876234830

üß© Cada parte da query string:
Campo (name)	Valor preenchido
name			Alessandra Lucas
age				21
password		123456
email			alessandra%40hotmail.com
Telefone		11876234830

- O + √© usado no lugar do espa√ßo.
- O %40 √© o s√≠mbolo @ codificado na URL.

*********************************************************************

‚úÖSe voc√™ n√£o colocar o method, o HTML assume automaticamente o m√©todo GET.

üìå Algumas melhorias ou ajustes que voc√™ pode considerar:
	- Adicionar method="POST"
	- Para evitar expor dados sens√≠veis na URL (como a senha):
	- <form name="signup" action="http://meusitecom.br/signup" method="POST">		

üìå Por que POST √© mais seguro?
	- Porque dados como senha, e-mail e telefone n√£o ficam vis√≠veis na URL, evitando exposi√ß√£o ou cache indesejado.
	- Embora n√£o seja criptografado por padr√£o, ele √© mais adequado para formul√°rios (especialmente se usado com HTTPS).	
	
	
‚úÖ Diferen√ßa entre GET e POST:
Caracter√≠stica						GET											POST
Envio dos dados						Pela URL (vis√≠vel)							Pelo corpo da requisi√ß√£o (oculto)
Aparece na barra do navegador?		‚úÖ Sim ‚Äî ?name=Ana&idade=30					‚ùå N√£o
Seguran√ßa							Menos seguro ‚Äî dados vis√≠veis				Mais seguro ‚Äî ideal para senhas, e-mails etc.
Tamanho dos dados					Limitado (geralmente at√© 2048 caracteres)	Pode enviar muitos dados
Usado para...						Buscar informa√ß√µes, abrir p√°ginas			Enviar, salvar ou atualizar informa√ß√µes
Pode ser salvo como favorito?		‚úÖ Sim										‚ùå N√£o	
	
*********************************************************************

‚úÖ autocomplete="":
Atributo autocomplete serve para ativar ou desativar o preenchimento autom√°tico de campos em formul√°rios pelo navegador. 
Ele ajuda o navegador a sugerir informa√ß√µes j√° usadas antes, como nome, e-mail, telefone etc.

‚úÖ Exemplo com autocomplete="on":
O navegador pode sugerir dados salvos (ex: nome completo, e-mail j√° usados).

<form autocomplete="on">
  Nome: <input type="text" name="name" /><br />
  Email: <input type="email" name="email" /><br />
</form>

‚ùå Exemplo com autocomplete="off":
O navegador n√£o vai sugerir preenchimento autom√°tico.

<form autocomplete="off">
  Nome: <input type="text" name="name" /><br />
  Email: <input type="email" name="email" /><br />
</form>

Pode ser usado:
	- No <form> (controla todos os campos),
	- Ou diretamente em um <input> individual.
	
=========== EXEMPLO ===========
	
<html>
  <head>
    <title>Formulario de Cadastro</title>
  </head>
  <body>

    <form name="signup" action="http://meusitecom.br/signup" method="POST">
      Nome: <input type="text" name="name" /><br />
      Idade: <input type="number" name="age" /><br />
      Senha: <input type="password" name="password" autocomplete="off" /><br />
      Email: <input type="email" name="email" autocomplete="on"/> <br />
      Telefone: <input type="number" name="Telefone" />

      <button type="submit">Enviar</button>
    </form>
  </body>
</html>	

==============================

‚úÖ Eventos On.

Os eventos on no HTML s√£o atributos que permitem executar um c√≥digo JavaScript quando algo acontece na p√°gina, como um clique, um movimento do mouse, uma tecla pressionada etc.
Eles sempre come√ßam com o prefixo on e s√£o seguidos pelo tipo de evento.

‚úÖ Exemplo simples:
<button onclick="alert('Voc√™ clicou!')">Clique aqui</button>

Neste exemplo:
	- onclick √© o evento.
	- "alert('Voc√™ clicou!')" √© o c√≥digo JavaScript que ser√° executado quando o bot√£o for clicado.
	
üß† Alguns dos eventos on mais usados:
Evento			Quando acontece
onclick			Quando o usu√°rio clica em um elemento
onmouseover		Quando o mouse passa por cima
onmouseout		Quando o mouse sai de cima do elemento
onchange		Quando o valor de um input muda
onkeydown		Quando uma tecla √© pressionada
onkeyup			Quando uma tecla √© solta
onsubmit		Quando um formul√°rio √© enviado
onload			Quando a p√°gina ou uma imagem √© carregada	

=========== EXEMPLO ===========

<html>
  <head>
    <title>Formulario de Cadastro</title>
  </head>
  <body>

    <form
      name="signup"
      onsubmit="alert('Enviei um Formulario')"
      action="http://meusitecom.br/signup"
      method="POST"
    >
      Nome: <input type="text" name="name" /><br />
      Idade: <input type="number" name="age" /><br />
      Senha: <input type="password" name="password" autocomplete="off" /><br />
      Email: <input type="email" name="email" autocomplete="on" /> <br />
      Telefone: <input type="number" name="Telefone" />

      <button type="submit">Enviar</button>
    </form>
  </body>
</html>


------------- Tags Input e seus Tipos -------------

‚úÖ <input>	
	- O elemento <input> no HTML √© usado para criar campos de entrada de dados em formul√°rios.
	- Ele pode aceitar diferentes tipos de dados, dependendo do valor do atributo type.
	
‚úÖ Principais type da tag <input>:

Type=" "		O que faz:
text			Campo de texto comum
password		Campo para senha (oculta os caracteres)
email			Campo para e-mail (valida√ß√£o autom√°tica)
number			Campo para n√∫mero (com setinhas ‚Üë‚Üì)
tel				Campo para telefone (teclado num√©rico no celular)
url				Campo para links/endere√ßos de site
search			Campo de busca (estilo Google)
date			Seleciona uma data (calend√°rio)
time			Seleciona um hor√°rio
datetime-local	Data e hora (sem fuso hor√°rio)
color			Seletor de cor (mostra uma paleta)
file			Seleciona um arquivo para envio
checkbox		Caixa de sele√ß√£o (v√°rios itens)
radio			Bot√£o de sele√ß√£o √∫nica (escolher uma op√ß√£o)
range			Controle deslizante (barra de valor)
hidden			Campo invis√≠vel (usado para enviar dados escondidos)
submit			Bot√£o para enviar o formul√°rio
reset			Bot√£o para limpar todos os campos
button			Bot√£o normal (usado com JS ou personalizado)		


‚úÖ O atributo for=""
No HTML, o atributo for="" na tag <label> serve para ligar a <label> a um campo <input> espec√≠fico. 
Ele melhora a acessibilidade e permite que, ao clicar no texto da <label>, o foco v√° direto para o campo correspondente.

Como funciona:
	- O for deve ter o mesmo valor que o id do <input>.

Exemplo correto:
<form>
  <label for="nome">Digite seu nome:</label>
  <input type="text" id="nome" />
</form>

Neste exemplo:
	- O label est√° associado ao input com id="nome".
	- Se o usu√°rio clicar em "Digite seu nome:", o cursor vai direto pro campo de texto.
	
	
‚úÖ <input type="number"> com as limita√ß√µes min e max.  
	<input type="number" min="0" max="10" />
	
	- min="0" ‚Üí o valor m√≠nimo permitido √© 0
	- max="10" ‚Üí o valor m√°ximo permitido √© 10
	- *** O usu√°rio n√£o poder√° digitar (ou usar as setas) para inserir valores menores que 0 ou maiores que 10.
	
‚ö†Ô∏è Importante:
- Mesmo com essas restri√ß√µes, um usu√°rio pode burlar isso manualmente no navegador.
- Por isso, se voc√™ for tratar os dados no backend (PHP, C#, etc.), tamb√©m √© importante validar o valor l√°.	


üìå O que √© o atributo step no <input type="number">?
O atributo **step** define o intervalo permitido entre os valores num√©ricos que o usu√°rio pode inserir.

‚ö†Ô∏è Sem step (padr√£o √© 1):
Se voc√™ n√£o usar o step, ele considera step="1" por padr√£o, ent√£o s√≥ aceita inteiros.

Se quiser limitar tamb√©m a quantidade de casas decimais, voc√™ pode usar o atributo step:
	<input type="number" min="0" max="10" step="1" />

	- step="1" ‚Üí s√≥ aceita n√∫meros inteiros 0, 1, 2, 3...
	- step="0.1" ‚Üí aceita casas decimais de 0.1 em 0.1
	- step="5" ‚Üí pula de 5 em 5: 0, 5, 10, 15...
	- step="2" ‚Üí s√≥ aceita n√∫meros pares 0, 2, 4... ou 1, 3, 5 (se min=1)
	- any ‚Üí Aceita qualquer valor, at√© fora dos padr√µes (1.5, 2.3, 99.999...)
	
‚ö†Ô∏è Sobre step="any":
Use quando voc√™ quiser liberdade total nos valores num√©ricos ‚Äî especialmente quando n√£o sabe o intervalo (ex: valores financeiros, peso, altura, etc.).	


‚ö†Ô∏è Dica importante:
Mesmo com step, o usu√°rio pode digitar manualmente um valor inv√°lido. Ent√£o:
	- Navegadores geralmente bloqueiam o envio do formul√°rio.
	- Mas voc√™ deve validar tamb√©m no backend, se for usar em um sistema real.
	
	
Site: https://www.w3schools.com/tags/tag_input.asp		
	
=========== EXEMPLO ===========	
	
 <body>
    <form action="">
      <label for="nome">Digite nomo completo: </label
      ><input type="text" /><br />
      <label for="numero">Number: </label
      ><input type="number" min="0" max="50" step="3" /><br />
      <button>Enviar</button><br />
      <label for="range">Selecione: </label><input type="range" /><br />
      <label for="range">Selecione: </label
      ><input type="range" min="0" max="80" /><br />
      <label for="color">Cor: </label><input type="color" /><br />
      <label for="email">E-mail: </label><input type="email" /><br />
      <label for="date">Data: </label><input type="date" /><br />
      <label for="week">Semana: </label><input type="week" /><br />
      <label for="month">Mes: </label><input type="month" /><br />
      <label for="url">Url: </label><input type="url" /><br />
      <label for="checkbox">Checkbox: </label><input type="checkbox" /><br />
      <label for="radio">Radio:</label
      ><input type="radio" name="aceita" /><input
        type="radio"
        name="aceita"
      /><br />
      <label for="hiddne">Hiddne: </label
      ><input type="hidden" name="aceita" /><br />
      <label for="file">File: </label><input type="file" /><br />
      <label for="search">Busca: </label><input type="search" /><br />
      <label for="button">Bot√£o: </label
      ><input type="submit" value="Enviar" /><br />
    </form>
  </body>	

------------- Checkbox e Radio Button -------------

‚úÖ Checkbox e Radio Button
No HTML, usamos os campos checkbox e radio para permitir escolhas do usu√°rio em formul√°rios:

üü© Checkbox (type="checkbox")
	- Permite selecionar v√°rias op√ß√µes ao mesmo tempo.
	- Neste exemplo, o cliente pode escolher opcionais extras na pizza (queijo, cebola, etc.).
	- O atributo disabled (em peperoni) impede que o item seja selecionado.
	- name="opicional[]" ‚Üí os valores selecionados ser√£o enviados como lista.
	- value="queijo" ‚Üí √© o valor enviado se essa op√ß√£o for marcada.
	
üîò Radio Button (type="radio")
	- Permite apenas uma escolha por grupo.
	- √â usado, por exemplo, para escolher a borda ou a bebida.	
	- Todos os radios com o mesmo name fazem parte do mesmo grupo.
	- O usu√°rio s√≥ pode selecionar uma op√ß√£o por grupo.
	
üßæ O que ser√° enviado ao clicar ‚ÄúEnviar pedido‚Äù:
	- O navegador vai mandar os checkboxes marcados e a op√ß√£o escolhida de cada grupo de radio.
	- Vai para: http://meusitecom.br/signup?opicional[]=queijo&...&Borda=sim&Bebidas=suco	

<body>
    <form method="GET" action="http://meusitecom.br/signup">
      <h3>Voc√™ selecionou: Pizza de Calabresa.</h3>
      <p>Quais opcionais voc√™ deseja:</p>
      <input type="checkbox" name="opicional[]" value="queijo" /> + queijo
      <br />
      <input type="checkbox" name="opicional[]" value="calabresa" /> + calabresa
      <br />
      <input type="checkbox" name="opicional[]" value="cebola" /> + cebola
      <br />
      <input type="checkbox" name="opicional[]" value="azeitona" /> + azeitona
      <br />
      <input type="checkbox" disabled name="opicional[]" value="peperoni" /> +
      peperoni
      <br />

      <p>Borda recheada:</p>
      <input type="radio" name="Borda" value="sim" />Sim <br />
      <input type="radio" name="Borda" value="nao" />N√£o <br />

      <p>Bebidas:</p>
      <input type="radio" name="Bebidas" value="suco" />Suco <br />
      <input type="radio" name="Bebidas" value="refrigerante" />Refrigerante
      <br />
      <input type="radio" name="Bebidas" value="agua" />√Ågua <br />
      <input type="radio" name="Bebidas" value="nenhum" />Nenhum <br />

      <button type="submit">Enviar pedido</button>
    </form>
</body>	

------------- Button e seus Tipos -------------

‚úÖ 1. type="submit"
- Fun√ß√£o: Envia o formul√°rio para o servidor.
- Comportamento padr√£o: Se voc√™ omitir o type, o bot√£o assume automaticamente submit.

	<button type="submit">Enviar</button>
	<!-- ou -->
	<input type="submit" value="Enviar">
	
üìå Observa√ß√µes:
	- Boy√£o teclado Enter aciona o submit.
	- Mesmo sem clicar com o mouse.
	- Mesmo se o type="submit" estiver omitido.	
	
‚úÖ 2. type="reset"
- Fun√ß√£o: Limpa todos os campos do formul√°rio, voltando ao valor original (normalmente vazio).	
	
	<button type="reset">Limpar</button>
	<!-- ou -->
	<input type="reset" value="Limpar">
	
‚úÖ 3. type="button"
- Fun√ß√£o: N√£o faz nada por conta pr√≥pria. √â usado com JavaScript para alguma a√ß√£o personalizada (ex: abrir janela, validar dados, etc.).	

	<button type="button" onclick="alert('Voc√™ clicou!')">Clique</button>
	<!-- ou -->
	<input type="button" value="Clique" onclick="alert('Voc√™ clicou!')">
	
	
Resumo r√°pido:
Tipo		A√ß√£o							Requer JavaScript?
submit		Envia o formul√°rio				‚ùå
reset		Limpa os campos do formul√°rio	‚ùå
button		N√£o faz nada sem JavaScript		‚úÖ	


‚úÖ Para que serve o onsubmit?
O onsubmit √© um evento do HTML usado para executar uma fun√ß√£o JavaScript quando o formul√°rio est√° prestes a ser enviado.

Ele √© usado para:
	- Validar dados do formul√°rio antes do envio.
	- Impedir o envio se os dados estiverem incorretos.
	- Executar uma a√ß√£o personalizada ao enviar.

üìå Onde usar?
Voc√™ usa onsubmit na tag <form>, e ele se conecta a uma fun√ß√£o JavaScript.

=========== EXEMPLO ===========	
<html>
  <head>
    <title>Formulario de Cadastro</title>
  </head>

  <body>
    <form method="GET" action="http://meusitecom.br/signup">
      <label for="name">Nome: </label>
      <input type="text" id="name" name="name" /><br />

      <label for="age">Idade: </label>
      <input type="number" id="age" name="age" /><br />

      <label for="password">Password: </label>
      <input type="password" id="password" name="password" /><br />

      <button type="button" onclick="alert('Clique aqui')">Clicavel</button>
      <button type="button" onmouseover="alert('Passei aqui')">
        Passe o mouse aqui
      </button>
      <button type="reset">Limpar</button>
      <button type="submit">Enviar</button>
    </form>
  </body>
</html>
	
------------- Select e seus Tipos -------------	

‚úÖ <select> (ou select box) no HTML √© um menu suspenso (dropdown) usado em formul√°rios para o usu√°rio escolher uma op√ß√£o (ou v√°rias, se configurado).

‚úÖ Estrutura b√°sica:
<label for="fruta">Escolha uma fruta:</label>
<select name="fruta" id="fruta">
  <option value="ma√ß√£">Ma√ß√£</option>
  <option value="banana">Banana</option>
  <option value="uva">Uva</option>
</select>

üß† O que cada parte faz:
	- <select>: cria o campo de sele√ß√£o.
	- name="fruta": nome usado para enviar o dado.
	- <option>: cada item dentro do menu.
	- value="...": valor que ser√° enviado quando o usu√°rio escolher aquela op√ß√£o.
	
üñ±Ô∏è Resultado visual:
Quando o usu√°rio clica, v√™ uma lista:

‚ñº Escolha uma fruta:
   Ma√ß√£
   Banana
   Uva	
   
‚úÖ O que o atributo multiple faz no <select>:
Quando voc√™ adiciona multiple em um <select>, o usu√°rio pode selecionar mais de uma op√ß√£o ao mesmo tempo.

<select name="role" id="role" multiple>
  ...
</select>

‚ö†Ô∏è Importante:
	- Para que os v√°rios valores sejam enviados corretamente, √© comum usar [] no nome:
	- <select name="role[]" id="role" multiple>
   
=========== EXEMPLO ===========	   
   
<html>
  <head>
    <title>Formulario de Cadastro</title>
  </head>

  <body>
    <form method="GET" action="http://meusitecom.br/signup">
      <label for="name">Nome: </label>
      <input type="text" id="name" name="name" /><br />

      <label for="name2">Cargo: </label>
      <select name="role" id="role">
        <option value="">Selecione uma op√ß√£o</option>
        <option value="administrativo">Administrativo</option>
        <option value="gerente">Gerente</option>
        <option value="diretor">Diretor</option>
        <option value="presidente">Presidente</option></select
      ><br />

      <label for="name3">Assunto: </label>
      <input type="text" id="name3" name="text" /><br />
      <button type="submit">Enviar</button>
    </form>
  </body>
</html>   


------------- Texarea -------------	

A tag <textarea> no HTML √© usada para criar um campo de texto grande, onde o usu√°rio pode digitar m√∫ltiplas linhas, como em uma caixa de mensagem, coment√°rio ou descri√ß√£o.

‚úÖ Exemplo b√°sico:
<label for="mensagem">Mensagem:</label><br>
<textarea id="mensagem" name="mensagem" rows="4" cols="50"></textarea>

üß† O que cada parte faz:
	- <textarea>: cria a caixa de texto.
	- name="mensagem": nome usado no envio do formul√°rio.
	- rows: n√∫mero de linhas vis√≠veis (altura).
	- cols: n√∫mero de colunas vis√≠veis (largura).
	- </textarea>: fecha a tag (diferente de <input> que √© fechada sozinho).
	- Pode ter texto padr√£o dentro: <textarea>Texto inicial aqui</textarea>
	
üñ±Ô∏è Visual:
O usu√°rio ver√° uma caixa de digita√ß√£o grande, que aceita Enter para pular linha.	

‚úÖ Dica:
Tamb√©m funciona com placeholder:
<textarea name="comentario" placeholder="Escreva seu coment√°rio..."></textarea>


‚úÖ rows e cols no <textarea> servem para definir o tamanho vis√≠vel da caixa de texto.
üìå Explicando:
	- rows ‚Üí define a altura, ou seja, quantas linhas de texto aparecem visivelmente.
	- cols ‚Üí define a largura, ou seja, quantos caracteres cabem por linha (aproximadamente).
	
üìù Resultado:
√â s√≥ visual. O campo pode ter mais texto do que cabe ‚Äî ele vai mostrar barras de rolagem se for necess√°rio.	