-------------  HTML: Recursos especiais -------------

Apresenta√ß√£o
 
 Percurso:
 - <datalist>
 - <code>, <kbd>, <pre>
 - <details>, <summary>
 - <meter>, <progress>
 - mark> (com javascript)
 - <canvas> - Part 1
 - <canvas> - Part 2
 - Novos atributos do HTML 5
 
 Objetivo: 
 Dominar Tags muito importantes, mas as vezes mal utilizada do HTML 5.
 Uma breve introdu√ß√£o ao desenvolvimento com javascript.
 Conhecer novos atributos bem √∫teis para o desenvolvimento mais complexo.
 
------------- <datalist> ------------- 

A tag <datalist> no HTML5 serve para criar uma lista de op√ß√µes pr√©-definidas que podem ser sugeridas ao usu√°rio enquanto ele digita em um campo de entrada (<input>).

üëâ Diferente de um <select>, o <datalist> n√£o limita o usu√°rio: ele pode escolher uma op√ß√£o da lista ou digitar algo totalmente novo.

Estrutura b√°sica:
<label for="fruta">Escolha uma fruta:</label>
<input list="frutas" id="fruta" name="fruta">

<datalist id="frutas">
  <option value="Ma√ß√£">
  <option value="Banana">
  <option value="Laranja">
  <option value="Uva">
</datalist>


üîé Como funciona:
 - O atributo list do <input> se conecta ao id do <datalist>.
 - O navegador sugere as op√ß√µes do <datalist> conforme o usu√°rio digita.
 - O usu√°rio pode digitar algo diferente do que est√° na lista.
 
 
------- Exemplo

<!DOCTYPE html>
<html lang="pt-br">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>HTML: Recursos especiais</title>
  </head>

  <body>
    <input list="browsers" type="search" name="search" />
    <datalist id="browsers">
      <option value="chrome">Google Chrome</option>
      <option value="firefox">Mozila FireFox</option>
      <option value="edge">Microsoft Edge</option>
      <option value="safari">Safari</option>
      <option value="opera">Opera</option>
    </datalist>

    <br /><br /><br />
    <select name="browsers" id="browsers">
      <option value="">Selecione um navegador</option>
      <option value="chrome">Google Chrome</option>
      <option value="firefox">Mozila FireFox</option>
      <option value="edge">Microsoft Edge</option>
      <option value="safari">Safari</option>
      <option value="opera">Opera</option>
    </select>
  </body>
</html> 


A diferen√ßa principal entre <datalist> e <select> √© a flexibilidade:

üìå <select>
 - Cria uma lista suspensa fixa.
 - O usu√°rio s√≥ pode escolher entre as op√ß√µes dispon√≠veis.

Exemplo:
<label for="cor">Escolha uma cor:</label>
<select id="cor" name="cor">
  <option value="vermelho">Vermelho</option>
  <option value="azul">Azul</option>
  <option value="verde">Verde</option>
</select>

‚û°Ô∏è O usu√°rio s√≥ consegue escolher vermelho, azul ou verde.


üìå <datalist>
 - Funciona junto com um <input>.
 - O usu√°rio pode digitar livremente ou escolher uma sugest√£o.

Exemplo:
<label for="cor">Digite ou escolha uma cor:</label>
<input list="cores" id="cor" name="cor">
<datalist id="cores">
  <option value="Vermelho">
  <option value="Azul">
  <option value="Verde">
</datalist>


‚û°Ô∏è O usu√°rio pode escolher vermelho, azul, verde ou digitar qualquer outra cor (ex: "amarelo").

‚öñÔ∏è Resumindo:
 - <select> ‚Üí limita a escolha, n√£o deixa digitar livre.
 - <datalist> ‚Üí sugere op√ß√µes, mas deixa o usu√°rio escrever o que quiser.
 
------------- <code>, <kbd>, <pre> ------------- 

Essas tr√™s tags s√£o usadas para representar c√≥digo ou texto relacionado a programa√ß√£o/digita√ß√£o em HTML, mas cada uma tem um objetivo diferente:

1. <code>
 - Representa um trecho de c√≥digo (inline ou em bloco).
 - O navegador geralmente exibe em fonte monoespa√ßada.
 - Uso: mostrar c√≥digo dentro de frases ou blocos.

<p>Para exibir texto na tela use a fun√ß√£o <code>console.log()</code>.</p>


2. <kbd>
 - Representa uma entrada do usu√°rio pelo teclado (ou outro dispositivo de entrada).
 - √ötil para documenta√ß√µes que mostram quais teclas o usu√°rio deve pressionar.

<p>Pressione <kbd>Ctrl</kbd> + <kbd>C</kbd> para copiar.</p>


3. <pre>
 - Significa "preformatted text".
 - Mant√©m quebras de linha, espa√ßos e tabula√ß√µes exatamente como est√£o no HTML.
 - Muito usado para mostrar blocos de c√≥digo ou textos alinhados.

<pre>
Linha 1
    Linha 2 com tab
        Linha 3 com mais tab
</pre>


üìå Resumindo:
 - <code> ‚Üí mostra c√≥digo de programa√ß√£o.
 - <kbd> ‚Üí mostra teclas/entradas do usu√°rio.
 - <pre> ‚Üí preserva a formata√ß√£o original do texto.
 
 
------- Exemplo

<!DOCTYPE html>
<html lang="pt-br">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>HTML: Recursos especiais</title>

    <style>
      kbd {
        border: solid 1px black;
      }
      pre {
        background: f1f1f1;
      }
      pre > code {
        color: red;
      }
      pre > p {
        font-style: italic;
        color: gray;
      }
    </style>
  </head>

  <body>
    <p>Para exibir texto na tela use a fun√ß√£o <code>console.log()</code>.</p>

    <p>Pressione <kbd>Ctrl</kbd> + <kbd>C</kbd> para copiar.</p>

    <pre>
      <code>
        Linha 1
          Linha 2 com tab
            Linha 3 com mais tab
    </pre>
  </body>
</html> 


------------- <details>, <summary> ------------- 

üìå <details>
 - Cria uma se√ß√£o ocult√°vel/expand√≠vel.
 - Quando fechada, mostra s√≥ o <summary>.
 - Quando aberta, exibe o conte√∫do interno.

üìå <summary>
 - Define o t√≠tulo/legenda que aparece na barra clic√°vel.
 - Fica dentro do <details>.

Exemplo pr√°tico:
<details>
  <summary>Mais informa√ß√µes</summary>
  <p>Aqui est√° o texto extra que pode ser expandido ou ocultado.</p>
</details>


‚û°Ô∏è O usu√°rio v√™ s√≥ ‚ÄúMais informa√ß√µes‚Äù e, ao clicar, o par√°grafo aparece.

Exemplo com c√≥digo:
<details>
  <summary>Ver c√≥digo em JavaScript</summary>
  <pre><code>
function hello() {
  console.log("Hello, world!");
}
  </code></pre>
</details>


üìå Resumo:
 - <details> ‚Üí cria o bloco expans√≠vel.
 - <summary> ‚Üí define o t√≠tulo vis√≠vel para abrir/fechar.
 
 
------- Exemplo 
 
 <!DOCTYPE html>
<html lang="pt-br">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>HTML: Recursos especiais</title>
  </head>

  <body>
    <details>
      <summary>Ver c√≥digo em JavaScript</summary>
      <pre>
        <code>
          function hello() {
            console.log("Hello, world!");
          }
        </code>
      </pre>
    </details>
  </body>
</html>



------------- <meter>, <progress> ------------- 

üìå <progress>
 - Representa o progresso de uma tarefa em andamento.
 - Normalmente usado para carregamento, upload, download etc.
 - Pode ter valores m√≠nimo (min), m√°ximo (max) e atual (value).

Exemplo:
<label for="upload">Upload do arquivo:</label>
<progress id="upload" value="40" max="100">40%</progress>

‚û°Ô∏è Mostra que o upload est√° em 40% conclu√≠do.


üìå <meter>
 - Representa um valor dentro de um intervalo conhecido, como uma medida ou n√≠vel.
 - Usado para indicadores de quantidade, como nota, pontua√ß√£o, temperatura, n√≠vel de bateria etc.
 - Tem atributos como min, max, value, low, high, optimum.

Exemplo:
<label for="nota">Nota do aluno:</label>
<meter id="nota" value="7.5" min="0" max="10" low="4" high="8" optimum="10">
  7.5 de 10
</meter>

‚û°Ô∏è Mostra uma barra indicando a nota 7.5 dentro da escala de 0 a 10.

‚öñÔ∏è Diferen√ßa resumida:
 - <progress> ‚Üí usado para progresso de tarefas em execu√ß√£o (carregando algo).
 - <meter> ‚Üí usado para indicar um valor mensur√°vel dentro de uma escala (n√≠vel, medida, desempenho). Um medidor
 
 
 ------- Exemplo 
 
<!DOCTYPE html>
<html lang="pt-br">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>HTML: Recursos especiais</title>
  </head>

  <body>
    <meter max="100" min="0" value="50"></meter>

    <progress id="progress" max="100" min="0" value="0"></progress>

    <script>
      var progress = document.getElementById("progress");
      const interval = setInterval(() => {
        progress.value += 10;
        if (progress.value >= 100) {
          alert("Carregamento realizado com sucesso!");
          clearInterval(interval);
        }
      }, 1000);
    </script>
  </body>
</html>

-------------  mark> (com javascript) ------------- 

üè∑Ô∏è Tag <mark>
 - A tag <mark> (HTML5) serve para destacar um trecho de texto que √© considerado relevante para o contexto. 
 - Visualmente, os navegadores normalmente aplicam um fundo amarelo ao texto dentro de <mark> por padr√£o. 

 Uso e caracter√≠sticas
  - √â uma marca√ß√£o sem√¢ntica ‚Äî indica que aquele texto tem relev√¢ncia dentro do conte√∫do, n√£o apenas estiliza√ß√£o est√©tica. 
  - Aceita atributos globais (como id, class, style) e eventos (como onclick) como outras tags HTML. 
  - Pode-se customizar o estilo via CSS (cor de fundo, cor do texto etc.). 

 Exemplo simples
  <p>Este √© um texto e aqui est√° um <mark>termo importante</mark> que queremos destacar.</p>

 Observa√ß√µes importantes
  - Alguns leitores de tela n√£o anunciam automaticamente que o texto est√° ‚Äúmarcado‚Äù (ou seja, pode n√£o haver indica√ß√£o auditiva). 
  - Se voc√™ quiser tornar isso acess√≠vel, pode usar pseudo-elementos CSS (::before / ::after) com content para inserir avisos para tecnologias assistivas. 

 ------- Exemplo 

<!DOCTYPE html>
<html lang="pt-br">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>HTML: Recursos especiais</title>
  </head>

  <body>
    <input type="text" id="busca" /><br />
    <p id="descricao">
      A primeira regra de qualquer tecnologia utilizada nos neg√≥cios √© que a
      automa√ß√£o aplicada a uma opera√ß√£o eficiente aumentar√° a efici√™ncia. A
      segunda √© que a automa√ß√£o aplicada a uma opera√ß√£o ineficiente aumentar√° a
      inefici√™ncia
    </p>

    <script>
      var searchField = document.getElementById("busca");
      var descriptionObject = document.getElementById("descricao");
      var textToSearch = descriptionObject.innerHTML;

      function realizaBusca(busca) {
        const regex = new RegExp(`(${busca})(?!(.(?!<mark>))*</mark>)+`, "ig");
        const ocurrences = textToSearch.match(regex);
        descriptionObject.innerHTML = textToSearch.replace(
          regex,
          `<mark>${busca}</mark>`
        );
      }

      searchField.addEventListener("keyup", (e) =>
        realizaBusca(e.target.value)
      );
    </script>
  </body>
</html>

-------------  <canvas> - Part 1 ------------- 

 O que √© <canvas>
 
 <canvas> √© uma √°rea retangular em HTML usada para desenhar graficamente via JavaScript. 
 √â ideal para gr√°ficos, jogos 2D, visualiza√ß√µes, assinaturas, anima√ß√µes e desenhos din√¢micos. 
 O elemento em si √© s√≥ uma tela ‚Äî tudo que aparece vem de c√≥digo JS.
 
 B√°sico: estrutura HTML
 <canvas id="meuCanvas" width="600" height="300">
   Seu navegador n√£o suporta canvas.
 </canvas>


 - width e height definem a resolu√ß√£o da tela (padr√£o 300√ó150).
 - Dentro da tag pode ter conte√∫do alternativo para navegadores antigos / leitor de tela.

------- Exemplo 

site https://www.w3schools.com/html/html5_canvas.asp

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Canvas - Parte 1</title>
  </head>
  <body>
    <canvas
      id="myCanvas"
      width="200"
      height="100"
      style="border: 1px solid #000000"
    >
    </canvas>

    <script>
      var c = document.getElementById("myCanvas");
      var ctx = c.getContext("2d");
      ctx.moveTo(0, 0);
      ctx.lineTo(200, 100);
      ctx.stroke();
    </script>
  </body>
</html>


-------------  <canvas> - Part 2 ------------- 


-------------  Novos atributos do HTML 5 ------------- 